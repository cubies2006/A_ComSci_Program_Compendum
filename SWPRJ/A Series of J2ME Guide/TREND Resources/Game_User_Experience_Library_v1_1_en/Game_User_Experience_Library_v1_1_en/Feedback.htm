<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Feedback</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="Game_User_Experience_Library_v1_1_en_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='Game_User_Experience_Library_v1_1_en.css'>");}
//-->
</script>
<style>
<!--
A:visited { color:#800080; }
A:link { color:#0000ff; }
-->
</style><style type="text/css">
<!--
img_whs1 { width:142px; height:169px; border-style:none; }
img_whs2 { width:143px; height:168px; border-style:none; }
ol.whs3 { list-style:disc; }
ul.whs4 { list-style:disc; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
</head>
<body lang="EN-US"><script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("Usability guidelines\nGame experience\nFeedback");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("Game_User_Experience_Library_v1_1_en.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
<h2>Feedback</h2>

<p class=BodyCopy><img src="Game_User_Experience_Library_v1_1_en_files/image054.jpg" width="142px" height="169px" border="0" class="img_whs1">&nbsp; <img src="Game_User_Experience_Library_v1_1_en_files/image056.jpg" width="143px" height="168px" border="0" class="img_whs2"></p>

<p class=BodyHeading1>Provide useful feedback</p>

<p class=BodyCopy>Players need to know how they are doing and what they 
 have accomplished. Fun is derived when players know how they are succeeding 
 and what they need to improve. In multiplayer games, the challenge depends 
 on other players. Therefore, the player needs to get feedback from other 
 players’ actions, too. Players need feedback to understand the game situation, 
 plan their own actions, and evaluate how everybody is succeeding.</p>

<ol type="disc" class="whs3">
	
	<ul type="disc" class="whs4">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0in;">Provide 
 clear feedback on essential elements in the game: when a level is completed, 
 when a bonus level is reached, when the players succeed, or why they have 
 failed (score a goal or kill an enemy), and so on.</p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0in;">Essential 
 elements need visual feedback so that the game is playable without sounds. 
 Some ways of presenting feedback are more easily perceived than others. 
 For example, a progress bar or tally mark communicates amount (for example, 
 player health or amount of strikes) better than Arabic numerals. </p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0in;">In multiplayer 
 games, provide clear feedback about who has won and lost. Communicate 
 to the users about their performance by using “you” instead of a name 
 or color symbol.</p></li>
	</ul>
</ol>

<p class=BodyCopy>When users are connected to a game server, they need 
 to know what has happened and is happening in order to know what to do 
 next. If there is no feedback about interactions on the server, the user 
 will think the actions have failed.</p>

<ol type="disc" class="whs3">
	
	<ul type="disc" class="whs4">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">After 
 the user has uploaded a file (for example, a clip or a ghost) to a server, 
 provide clear feedback that the file has been uploaded and where the destination 
 folder is.</p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">After 
 the user has sent a challenge to a friend, provide feedback that the challenge 
 has been sent successfully.</p></li>
	</ul>
</ol>

<p class=BodyHeading1>Display status clearly</p>

<p class=BodyCopy>The users must always understand their own current status 
 and the status of other players. In particular, critical information concerning 
 topics such as a game character’s health, weaponry, or money must be conveyed 
 to the user clearly and without the risk of misinterpretation.</p>

<ol type="disc" class="whs3">
	
	<ul type="disc" class="whs4">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">Determine 
 the most important information for players and display it clearly on the 
 screen, making sure there is not too much information — one or two status 
 indicators are plenty for most games. If this is not sufficient, the design 
 may need to be refined to allow a simpler interface.</p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">In <span 
 class=MultiplayerChar><span style="font-family: Arial;">multiplayer</span></span> 
 games, players must be able to identify both their own and the other players’ 
 status in the game at all times. For example, in racing games the player 
 should be able to follow where others are on a map, in puzzle games the 
 player should be able to see the scores of the others, and in action games 
 the player should at least be able to select the opponents and view their 
 status if it is not possible to show the status on the small screen all 
 the time.</p></li>
	</ul>
</ol>

<p class=BodyHeading1>See also</p>

<p class=BodyCopy>Usability guidelines &gt; Game experience &gt; <a href="Graphics.htm"
	target=_self>Graphics</a></p>

<p class=BodyCopy>Usability guidelines &gt; Game experience &gt; <a href="Sounds.htm"
	target=_self>Sounds</a></p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>
</html>
