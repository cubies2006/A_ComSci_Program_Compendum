<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Match with the real world</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="Game_User_Experience_Library_v1_1_en_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='Game_User_Experience_Library_v1_1_en.css'>");}
//-->
</script>
<style>
<!--
A:visited { color:#800080; }
A:link { color:#0000ff; }
-->
</style><style type="text/css">
<!--
ol.whs1 { list-style:disc; }
ul.whs2 { list-style:disc; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
</head>
<body lang="EN-US"><script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("Usability guidelines\nGame experience\nMatch with the real world");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("Game_User_Experience_Library_v1_1_en.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
<h2>Match with the real world</h2>

<p class=BodyHeading1>No prior knowledge required</p>

<p class=BodyCopy>The game must be playable without the user having prior 
 knowledge of how it works. In theory, this means that a game could be 
 solved and a high score reached in the first play session; in practice, 
 this should not be the case or the game will lack challenge. Game success 
 must not depend on knowledge of things about to happen in a game, such 
 as where a treasure is located. Of course there can be secrets and surprises 
 within a game, but developers should not annoy users, for example, by 
 killing them when there is nothing they can do about it. For example, 
 users should not be forced to take a 50/50 chance in which the wrong selection 
 kills them, or required to know what will happen next in order to make 
 it possible to clear that area of a game.</p>

<ol type="disc" class="whs1">
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">Game 
 challenge must not come from a knowledge that a player must possess prior 
 to playing.</p></li>
	</ul>
</ol>

<p class=BodyHeading1>Realism</p>

<p class=BodyCopy>The rules of everyday physics are understood intuitively. 
 For example, although people often make mistakes in assessing the trajectories 
 of objects, they are fairly good at estimating whether or not the movement 
 of an object is believable. This implicit knowledge should be exploited, 
 not violated. Applying realism to a game makes it feel more familiar and 
 predictable.</p>

<ol type="disc" class="whs1">
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">Do not 
 force the players to learn new things when they can use prior knowledge. 
 A realistic physics model should be implemented in relevant games (racing 
 games, for example).</p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">Do not 
 expect that objects that are dangerous to a player in real life will be 
 desirable in a game. For example, in racing games the players might intuitively 
 avoid hitting dangerous-looking objects even if they are designed to give 
 more speed.&nbsp; </p></li>
	</ul>
</ol>

<p class=BodyHeading1>No invisible barriers</p>

<p class=BodyCopy>If there are sections of the game area or level that 
 the players should not access, they must be prevented from going there. 
 Areas that are inaccessible must look different from areas that are normally 
 accessible.</p>

<ol type="disc" class="whs1">
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">There 
 should be no invisible walls or invisible barriers. If something is inaccessible, 
 it should not appear to be accessible, otherwise users will get frustrated.</p></li>
	</ul>
</ol>

<p class=BodyHeading1>Bonus and special features</p>

<p class=BodyCopy>Games should be variable to keep players interested. 
 Special levels are features that bring more variety to the play. They 
 also increase the replayability of the game. However, if the game rules 
 for these levels are different, players must understand this.</p>

<ol type="disc" class="whs1">
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0in;">Provide 
 variety in the game through bonus levels, changing game settings, or providing 
 different styles of game play. A natural reward and motivator is to reach 
 the next, different-looking setting, gain new abilities, or meet new opponents.</p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0in;">Bonus 
 and special levels must look distinctively different from normal levels; 
 this can be accomplished by using in-game help text, a different background, 
 different sounds, and so on.</p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0in;">The objective 
 of the bonus level or special game play needs to be clearly stated if 
 it differs from the normal levels.</p></li>
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0in;">If players 
 can reach special levels by their own actions, the special level should 
 start right after the action (for example, finding a treasure or achieving 
 a certain score). There must be a clear connection between what the user 
 does and what happens as a result.</p></li>
	</ul>
</ol>

<p class=BodyHeading1>Getting killed</p>

<p class=BodyCopy>If it is possible to die in a game, and particularly 
 if the death comes as a surprise to the user, there must be a short period 
 of immunity, where the user cannot die again and has time to recover and 
 get his/her bearings.</p>

<ol type="disc" class="whs1">
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">The player 
 should be invulnerable for a moment after dying. This can be accomplished 
 by taking the user back to a safe place, shielding the user to prevent 
 a hit, or taking the user back to the beginning of the level.</p></li>
	</ul>
</ol>

<p class=BodyCopy>In <span class=MultiplayerChar><span style="font-family: Arial;">multiplayer</span></span> 
 games it is essential to know the status of the other players.</p>

<ol type="disc" class="whs1">
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p-CGuideline><p class=Guideline
										style="margin-left: 0pt;">If the 
 user cannot see the other players, inform the user when somebody dies. 
 Use the other players’ names and color symbols so that the user can easily 
 identify who has died.</p></li>
	</ul>
</ol>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>
</html>
